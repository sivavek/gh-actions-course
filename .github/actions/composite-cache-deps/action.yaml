name: Cache Node and NPM Dependencies
description: "This action allows to cache both Node and NPM dependencies based on the package-lock.json file."
inputs:
  node-version:
    description: "NodeJS version to use"
    default: '20.x'
    required: true
  working-dir:
    description: "The working directory of the application"
    default: '.'
    required: false
  target-env:
    description: '"dev" or "prod". Controls whether dev dependencies are installed'
    required: false
    default: staging
runs:
  using: composite
  steps:
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version }}

    - name: Download cached dependencies
      id: cache
      uses: actions/cache@v3
      with:
        path: ${{ inputs.working-dir }}/node_modules
        key: ${{ inputs.target-env }}-node-modules-${{ hashFiles(format('{0}/{1}', inputs.working-dir, 'package-lock.json')) }}

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      working-directory: ${{ inputs.working-dir }}
      shell: bash
      run: |
        if [ "${{ inputs.target-env }}" = "staging" ]; then
          npm install --omit=staging
        else
          npm install
        fi

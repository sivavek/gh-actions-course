name: 13 - Using Caching
on:
  workflow_dispatch:
    inputs:
      use-cache:
        description: 'Whether to execute cache step'
        type: boolean
        required: false
        default: true
      node-version:
        description: 'Node.js version to use'
        type: choice
        options:
          - '16.x'
          - '18.x'
          - '20.x'
        default: '20.x'

jobs:

  install-deps:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.CACHE_KEY }}
    defaults:
      run:
        working-directory: ./13-caching/react-app

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}

      - name: Calculate cache key
        id: cache-key
        run: echo "CACHE_KEY=deps-node-modules-${{ hashFiles('13-caching/react-app/package-lock.json') }}" >> $GITHUB_OUTPUT
        
      - name: Download cached dependencies
        id: cache
        if: ${{ inputs.use-cache }}
        uses: actions/cache@v3
        with:
          path: ./13-caching/react-app/node_modules
          key: ${{ steps.cache-key.outputs.CACHE_KEY }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

  build:
    runs-on: ubuntu-latest
    needs: install-deps
    defaults:
      run:
        working-directory: ./13-caching/react-app

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}

      - name: Download cached dependencies
        id: cache
        if: ${{ inputs.use-cache }}
        uses: actions/cache@v3
        with:
          path: ./13-caching/react-app/node_modules
          key: ${{ needs.install-deps.outputs.cache-key }}

      
      # - name: Install dependencies
      #   if: steps.cache.outputs.cache-hit != 'true'
      #   run: npm install

      - name: Testing
        run: npm test

      - name: Building
        run: npm run build

      - name: Deploying to nonprod
        run: echo "Deploying to non-production environment"


  lintng:
    runs-on: ubuntu-latest
    needs: install-deps
    defaults:
      run:
        working-directory: ./13-caching/react-app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}

      - name: Download cached dependencies
        id: cache
        if: ${{ inputs.use-cache }}
        uses: actions/cache@v3
        with:
          path: ./13-caching/react-app/node_modules
          key: deps-node-modules-${{ hashFiles('13-caching/react-app/package-lock.json') }}
        
      - name: Testing
        run: npm test

      - name: Linting
        run: npm run lint